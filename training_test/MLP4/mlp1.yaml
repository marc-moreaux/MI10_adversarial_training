



!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.dense_design_matrix.DenseDesignMatrix {
        X: !pkl: '/home/marc/data/mnist_train_X.pkl',
        y: !pkl: '/home/marc/data/mnist_train_y.pkl',
        y_labels: 10,
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: %(batch_size)i,
        layers: [
                 !obj:pylearn2.models.mlp.PretrainedLayer {
                     layer_name: 'h1',
                     layer_content: !pkl: "%(save_path)s/dae_l1_%(nhid)s.pkl"
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 10,
                     irange: .005
                 }
                ],
        nvis: 784
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: .05,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: .5,
        },
        monitoring_dataset:
            {
                'valid' : !obj:pylearn2.datasets.dense_design_matrix.DenseDesignMatrix {
                    X: !pkl: '/home/marc/data/mnist_valid_X.pkl',
                    y: !pkl: '/home/marc/data/mnist_valid_y.pkl',
                    y_labels: 10,
                },
            },
        cost: !obj:costAdv.AdversarialCost {
            learning_eps: %(eps_adv)f
        },
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.MonitorBased {
                    channel_name: "valid_y_misclass",
                    prop_decrease: 0.,
                    N: 100,
                },
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: %(max_epochs)i,
                }
            ]
        },
    },
    extensions: [
           !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "%(save_path)s/mem/SA_mlp_MNIST_%(nhid)s_%(eps_adv)s.pkl",
        }, !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 1,
            saturate: 20,
            final_momentum: .7
        }
    ]
}
